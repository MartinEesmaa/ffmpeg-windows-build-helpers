From 4caa831baa34544a920fc49173f07ec0cfa0b13c Mon Sep 17 00:00:00 2001
From: Reino17 <rwijnsma@xs4all.nl>
Date: Fri, 3 May 2024 18:30:51 +0200
Subject: [PATCH 1/4] libavutil/random_seed.c: make bcrypt optional

WinXP doesn't have 'bcrypt'. See https://github.com/FFmpeg/FFmpeg/commit/aedbf1640ced8fc09dc980ead2a387a59d8f7f68 and https://github.com/sherpya/mplayer-be/blob/master/patches/ff/0001-make-bcrypt-optional-on-win32.patch.
---
 configure               |  4 +++-
 libavutil/random_seed.c | 18 +++++++++++++++++-
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/configure b/configure
index ed74583..77568a3 100755
--- a/configure
+++ b/configure
@@ -335,6 +335,7 @@ External library support:
   --enable-vapoursynth     enable VapourSynth demuxer [no]
   --disable-xlib           disable xlib [autodetect]
   --disable-zlib           disable zlib [autodetect]
+  --disable-bcrypt         disable bcrypt usage on win32, use wincrypt functions [no]
 
   The following libraries provide various hardware acceleration features:
   --disable-amf            disable AMF video encoding code [autodetect]
@@ -1854,6 +1855,7 @@ EXTERNAL_AUTODETECT_LIBRARY_LIST="
     sndio
     xlib
     zlib
+    bcrypt
 "
 
 EXTERNAL_LIBRARY_GPL_LIST="
@@ -6645,7 +6647,7 @@ for LATOMIC in "-latomic" ""; do
 done
 
 check_lib advapi32 "windows.h"            RegCloseKey          -ladvapi32
-check_lib bcrypt   "windows.h bcrypt.h"   BCryptGenRandom      -lbcrypt &&
+enabled bcrypt && check_lib bcrypt   "windows.h bcrypt.h"   BCryptGenRandom   -lbcrypt &&
     check_cpp_condition bcrypt bcrypt.h "defined BCRYPT_RNG_ALGORITHM"
 check_lib ole32    "windows.h objbase.h"  CoTaskMemFree        -lole32
 check_lib shell32  "windows.h shellapi.h" CommandLineToArgvW   -lshell32
diff --git a/libavutil/random_seed.c b/libavutil/random_seed.c
index 6d399ce..b49f3db 100644
--- a/libavutil/random_seed.c
+++ b/libavutil/random_seed.c
@@ -26,9 +26,13 @@
 #if HAVE_IO_H
 #include <io.h>
 #endif
-#if HAVE_BCRYPT
+#ifdef _WIN32
 #include <windows.h>
+#if HAVE_BCRYPT
 #include <bcrypt.h>
+#else
+#include <wincrypt.h>
+#endif
 #endif
 #if CONFIG_GCRYPT
 #include <gcrypt.h>
@@ -51,6 +55,7 @@
 #define TEST 0
 #endif
 
+#ifndef _WIN32
 static int read_random(uint8_t *dst, size_t len, const char *file)
 {
 #if HAVE_UNISTD_H
@@ -71,6 +76,7 @@ static int read_random(uint8_t *dst, size_t len, const char *file)
     return AVERROR(ENOSYS);
 #endif
 }
+#endif
 
 static uint32_t get_generic_seed(void)
 {
@@ -141,6 +147,14 @@ int av_random_bytes(uint8_t* buf, size_t len)
         if (BCRYPT_SUCCESS(ret))
             return 0;
     }
+#elif defined(_WIN32)
+    HCRYPTPROV hProvider;
+    if (CryptAcquireContext(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT | CRYPT_SILENT)) {
+        BOOL ret = CryptGenRandom(hProvider, len, buf);
+        CryptReleaseContext(hProvider, 0);
+        if (ret)
+            return 0;
+    }
 #endif
 
 #if HAVE_ARC4RANDOM_BUF
@@ -148,9 +162,11 @@ int av_random_bytes(uint8_t* buf, size_t len)
     return 0;
 #endif
 
+#ifndef _WIN32
     err = read_random(buf, len, "/dev/urandom");
     if (!err)
         return err;
+#endif
 
 #if CONFIG_GCRYPT
     gcry_randomize(buf, len, GCRY_VERY_STRONG_RANDOM);
-- 
2.8.3

